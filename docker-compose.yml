version: '3'

services:

  prometheus:
    image: prom/prometheus
    networks:
      - web
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - /data/monitoring/prometheus:/prometheus/data/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    links:
      - alertmanager:alertmanager
    restart: unless-stopped
#    mem_limit: 500m
    logging:
      driver: "json-file"
      options:
        max-size: '10m'

  node-exporter:
    image: prom/node-exporter
    networks:
      - web
    container_name: node-exporter
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro,rslave
    command:
      - '--path.rootfs=/rootfs'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    restart: unless-stopped
  #  mem_limit: 500m
    logging:
      driver: "json-file"
      options:
        max-size: '10m'

  loki:
    image: grafana/loki:master
    networks:
      - web
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-conf.yml:/etc/loki/local-config.yaml
      - loki_data:/tmp/loki/
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: '10m'

  grafana:
    image: grafana/grafana:6.0.0
    networks:
      - web
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.backend=grafana"
      - "traefik.docker.network=web"
      - "traefik.frontend.rule=Host:lpg.naturalis.nl"
      - "traefik.port=3000"
    restart: unless-stopped
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: '10m'

  promtail:
    image: grafana/promtail:master
    networks:
      - web
    container_name: promtail
    volumes:
      - ./loki/promtail-conf.yml:/etc/promtail/docker-config.yaml
#      - /opt/prometheus/promtail-positions.yml:/tmp/positions.yaml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: '10m'

  alertmanager:
    image: prom/alertmanager:v0.12.0
    networks:
      - web
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    logging:
      driver: "json-file"
      options:
        max-size: '10m'

  traefik:
    image: traefik:1.7.4
    networks:
      - web
      - default
    container_name: traefik
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${BASE_PATH:-/data}/traefiklogs/traefik.log:/var/log/traefik.log
      - ${TRAEFIK_TOML_FILE:-./traefik.toml}:/traefik.toml
      - ${CERTDIR:-/etc/letsencrypt}:/etc/letsencrypt
    logging:
      driver: "json-file"
      options:
        max-size: '10m'

volumes:
  grafana_data:
  loki_data:

networks:
  default:
  web:
    external: true
